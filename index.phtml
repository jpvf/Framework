<?php
//Nombre de la carpeta de la applicacion
$application_folder = 'application';
//Variable para evitar acceso directo por url cuando no se ingresa por este script
define('BASE'        , 1);
define('PATH'        , $_SERVER['DOCUMENT_ROOT'] . '/framework');
define('RUTA_SISTEMA', PATH . '/system');
define('RUTA_CORE'   , RUTA_SISTEMA . '/core/');
define('EXT'         , '.phtml');


include(RUTA_CORE    . 'constants'      . EXT);
include(RUTA_PACKAGES. 'debug/debug'    . EXT);
include(RUTA_CORE    . 'config'         . EXT);
include(RUTA_CORE    . 'loader'         . EXT);
include(RUTA_CORE    . 'router'         . EXT);
include(RUTA_CORE    . 'language'       . EXT);
include(RUTA_DB      . 'active_record'  . EXT);
include(RUTA_DB      . 'db'             . EXT);
include(RUTA_DB      . 'results'        . EXT);


$config = config::getInstance();
$load   = loader::getInstance();

$config->load('config, autoload');
$load->helper($config->get('helpers'));
$load->library($config->get('libraries'));
$input  = input::getInstance();

if ($config->get('debug'))
{
	set_error_handler("error_handler");
}
else
{
	error_reporting(0);
}

$router      = router::getInstance();
$uri         = uri::getInstance();
$controlador = $router->get_controller();

//Si llega hasta acÃ¡ es porque el controlador existe en alguna parte.
include($controlador->archivo);

$clase = $controlador->controlador;

$load->controlador = $controlador->controlador;

if (strpos($clase, '/'))
{
    $clase = explode('/', $clase);
    $clase = ucwords($clase[1]);
}

list($config->folder, $dump) = explode('controllers/', $router->controller_file);

$clase = new $clase;

if (method_exists($clase, $controlador->metodo) && is_callable(array($clase,$controlador->metodo)))
{       
    $vars = ($controlador->directorio == '') ? array_slice($uri->rsegments, 2) : array_slice($uri->rsegments, 3);

    if (method_exists($clase, 'before'))
    {
        call_user_func_array(array(&$clase, 'before'), $vars);    
    }

    call_user_func_array(array(&$clase, $controlador->metodo), $vars);   
    
    if (method_exists($clase, 'after'))
    {
        call_user_func_array(array(&$clase, 'after'), $vars);    
    }           
}
else
{
    mostrar_error();
}